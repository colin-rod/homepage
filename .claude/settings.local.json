{
  "permissions": {
    "allow": [
      "Bash(git commit -m \"$(cat <<''EOF''\nfeat(ci): set up GitHub Actions CI/CD workflow\n\nAdd comprehensive CI/CD pipeline with GitHub Actions:\n\n**Workflow Jobs:**\n\n1. **Lint & Type Check**\n   - Runs ESLint on all code\n   - Runs TypeScript type checking\n   - Executes on every push and PR\n\n2. **Unit & Component Tests**\n   - Runs Jest with all unit and component tests\n   - Uploads coverage reports to Codecov\n   - Executes on every push and PR\n\n3. **E2E Tests**\n   - Runs Playwright end-to-end tests\n   - Only on pull requests (saves CI time)\n   - Installs Playwright browsers automatically\n   - Uploads test reports as artifacts\n\n4. **Build**\n   - Builds Next.js application\n   - Verifies production build succeeds\n   - Uploads build artifacts\n   - Executes on every push and PR\n\n**Configuration:**\n- Node.js 20 (LTS)\n- npm caching for faster builds\n- Runs on ubuntu-latest\n- Artifacts retained for 7-30 days\n\n**Triggers:**\n- Push to any branch\n- Pull requests to development and main\n\nTests are informational (don''t block merge) but run automatically\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(npm install clsx tailwind-merge)",
      "Bash(npm run type-check)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfeat(data): define data architecture and shared types\n\nCreate unified data architecture with TypeScript interfaces and utilities:\n\n**TypeScript Types (lib/types.ts):**\n- TimelineEvent - Career and project timeline entries\n- Project - Project showcase data model  \n- CVData - Resume/CV structure with experience, skills, education\n- BlogPost - Writing/blog post metadata\n- Shared types: TagCategory, CVFilterType, PageMetadata\n\n**Data Files:**\n- data/projects.json - Project data with example structure\n- data/timeline.json - Timeline events with example structure\n- data/cv.json - CV data with skills, experience, education\n\n**Data Utilities (lib/data.ts):**\n- getProjects(), getProjectBySlug(), getFeaturedProjects()\n- getProjectsByTag(), getAllProjectTags()\n- getTimelineEvents(), getTimelineEventsByType(), getTimelineEventsByTag()\n- getCVData(), getFilteredCVData() for role-specific CVs\n- getAllTimelineTags()\n\n**Helper Utilities (lib/utils.ts):**\n- cn() - Tailwind class merging with clsx\n- formatDate(), formatDateRange(), calculateDuration(), formatDuration()\n- slugify(), truncate(), getInitials()\n\n**Dependencies Added:**\n- clsx - Class name composition\n- tailwind-merge - Tailwind class conflict resolution\n\n**Data Relationships:**\n- Timeline events marked as ''job'' align with CV experience\n- CV references projects by ID\n- Shared tag vocabulary across all data sources\n- ISO 8601 date format throughout\n\nTypeScript compiles with no errors âœ“\nReady for component development\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")"
    ],
    "deny": [],
    "ask": []
  }
}
