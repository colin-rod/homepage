[
  {
    "id": "sample-full-project",
    "title": "Sample Project With Full Metadata",
    "slug": "sample-full-project",
    "description": "Reference implementation that exercises every project data field",
    "detailedDescription": "Used across the site to validate rendering paths for detailed project entries, covering links, images, learnings, and metadata fields.",
    "type": "project",
    "scope": "Led the end-to-end discovery, design, and delivery of the v1 release",
    "prd": "docs/sample-full-project-prd.pdf",
    "businessModel": "Freemium SaaS with usage-based billing for premium insights",
    "status": "completed",
    "techStack": ["Next.js", "TypeScript", "Tailwind CSS", "PostgreSQL", "Stripe"],
    "tags": ["web", "product", "analytics", "design"],
    "whyBuilt": "Needed a comprehensive example to test new portfolio components",
    "learnings": [
      {
        "content": "Documenting every field helps catch UI regressions early",
        "sentiment": "positive"
      },
      {
        "content": "Automated visual tests benefit from consistent sample data",
        "sentiment": "positive"
      }
    ],
    "favicon": "/images/projects/sample-full-project/favicon.svg",
    "links": {
      "live": "https://example.com/sample-full-project",
      "github": "https://github.com/example/sample-full-project",
      "blog": "https://example.com/blog/sample-full-project",
      "prd": "https://example.com/docs/sample-full-project-prd"
    },
    "images": [
      "/images/projects/sample-full-project/dashboard.png",
      "/images/projects/sample-full-project/mobile.png",
      "https://example.com/sample-full-project/screenshot-dashboard.png",
      "https://example.com/sample-full-project/screenshot-mobile.png"
    ],
    "featured": false,
    "year": 2025,
    "quarter": "Q1"
  },
  {
    "id": "tribe-update",
    "title": "Tribe Update",
    "slug": "tribe-update",
    "description": "Private sharing platform that enables mindful social content sharing.",
    "detailedDescription": [
      "Users can create a 'tribe' of close friends and family to share updates, photos, and videos in a private, ad-free environment.",
      "Features for tribe creators include multiple upload channels (email, SMS, Whatsapp) and the ability to compile their updates into digital (and eventually physical) collectibles.",
      "Recipients can choose how they want to receive updates - via email digests, SMS or Whatsapp, what frequency and signifcance of updates they would like.",
      "An AI assistant compiles the updates into a beautiful gallery format tailored to the recipients preferences."
    ],
    "type": "project",
    "businessModel": "Freemium.",
    "status": "completed",
    "techStack": ["Next.js", "TypeScript", "Tailwind CSS", "PostgreSQL"],
    "tags": ["web", "product", "analytics", "design"],
    "whyBuilt": [
      "As I was sharing updates of our newborn child with multiple groups scattered across different platforms I realised that there should be a way to consolidate this manual uploading process.",
      "The problems we are solving are for users - to simplify uploads by consolidaitng multiple user groups into a single upload channel. ",
      "For recipients - to give them control over how they want to receive updates and what frequency/significance of updates they would like to receive.",
      "The platform prompts users to share mindfully by giving them ideas on what to share. The media that is shared is compiled into a digital collectible that can be treasured forever."
    ],
    "learnings": [
      {
        "content": "Initial version of this project used too much front end work and was hard to maintain. Re-architected to use server side rendering and static generation where possible to improve performance and reduce complexity",
        "sentiment": "negative"
      },
      {
        "content": "Pivoted project through design process. sometimes its easier to burn it down and restart rather than wade through archeology",
        "sentiment": "negative"
      },
      {
        "content": "Implemented automated testing (lint and type checks) as github actions. Absolutely amazing how much time this saves in the long run",
        "sentiment": "positive"
      },
      {
        "content": "Ran multiple audits using Chatgpt and Claude and consolidated results to improve security and frontend",
        "sentiment": "positive"
      },
      {
        "content": "Used SendGrid for email delivery and Twilio for SMS/Whatsapp delivery - both have great documentation which made integration easy",
        "sentiment": "positive"
      },
      {
        "content": "Implemented best practicies for engineering which resulted in significantly more overhead and complexity compared to a typical vibe coded project.",
        "sentiment": "neutral"
      }
    ],
    "links": {
      "live": "https://tribeupdate.com/",
      "github": "https://github.com/colin-rod/tribe_mvp/"
    },
    "featured": true,
    "year": 2025,
    "quarter": "Q2"
  },
  {
    "id": "portfolio-revamp",
    "title": "Interactive Portfolio",
    "slug": "portfolio-revamp",
    "description": "A modern, interactive portfolio with dynamic CV system and project showcase",
    "detailedDescription": "Built with Next.js 15, featuring a dynamic CV filtering system, timeline of highlights, and interactive project showcase.",
    "type": "project",
    "status": "in-progress",
    "techStack": ["Next.js", "TypeScript", "Tailwind CSS"],
    "tags": ["web", "product", "strategy"],
    "featured": true,
    "year": 2025,
    "quarter": "Q2"
  },
  {
    "id": "product-strategy",
    "title": "Product Strategy Framework",
    "slug": "product-strategy",
    "description": "Comprehensive framework for product strategy and roadmap planning",
    "detailedDescription": "Developed a systematic approach to product strategy, combining market analysis, user research, and competitive positioning to drive product decisions.",
    "type": "project",
    "status": "live",
    "techStack": ["Product Management", "Strategy", "Analytics"],
    "tags": ["product", "strategy"],
    "featured": true,
    "year": 2023,
    "quarter": "Q3"
  },
  {
    "id": "user-research",
    "title": "User Research Platform",
    "slug": "user-research",
    "description": "Platform for conducting and analyzing user research at scale",
    "detailedDescription": "Built internal tools for managing user interviews, surveys, and feedback analysis. Improved research velocity by 3x.",
    "type": "project",
    "status": "live",
    "techStack": ["React", "Node.js", "PostgreSQL"],
    "tags": ["web", "product", "research"],
    "featured": true,
    "year": 2023,
    "quarter": "Q2"
  },
  {
    "id": "example-project",
    "title": "Example Project",
    "slug": "example-project",
    "description": "A placeholder project to demonstrate the data structure",
    "detailedDescription": "This is an example project that shows how project data is structured",
    "type": "project",
    "status": "planned",
    "techStack": ["Next.js", "TypeScript", "Tailwind CSS"],
    "tags": ["web", "product"],
    "featured": false,
    "year": 2024,
    "quarter": "Q4"
  },
  {
    "id": "spotify-wrapped-analyzer",
    "title": "Spotify Wrapped Analyzer",
    "slug": "spotify-wrapped-analyzer",
    "description": "Tool to analyze and visualize Spotify listening history year-round",
    "detailedDescription": "Quick utility to connect to Spotify API and generate personalized listening stats and insights anytime, not just at year-end.",
    "type": "tool",
    "status": "live",
    "techStack": ["Next.js", "Spotify API", "Chart.js"],
    "tags": ["web", "api", "tech"],
    "featured": false,
    "year": 2024,
    "quarter": "Q2"
  },
  {
    "id": "meeting-notes-parser",
    "title": "Meeting Notes Parser",
    "slug": "meeting-notes-parser",
    "description": "CLI tool to extract action items from meeting transcripts",
    "detailedDescription": "Parses meeting notes and automatically extracts tasks, decisions, and action items using NLP.",
    "type": "tool",
    "status": "live",
    "techStack": ["Python", "OpenAI API", "Click"],
    "tags": ["automation", "tech"],
    "featured": false,
    "year": 2024,
    "quarter": "Q1"
  },
  {
    "id": "audiograph",
    "title": "Audiograph",
    "slug": "audiograph",
    "description": "Privacy-first analytics application for visualizing personal listening and viewing habits",
    "detailedDescription": [
      "A unified analytics platform that allows users to upload their Spotify personal data export to generate insights about listening patterns.",
      "Features include time-based listening insights with weekly cadence charts, listening streak computations, and materialized views for optimized analytics.",
      "Built with privacy as a core principle using Row Level Security policies to ensure user data remains protected.",
      "Comprehensive database architecture documented in /docs directory with Supabase setup guides."
    ],
    "type": "project",
    "businessModel": "Free, privacy-first personal analytics tool",
    "status": "live",
    "techStack": [
      "Next.js",
      "TypeScript",
      "Supabase",
      "PostgreSQL",
      "Vitest",
      "Primer React",
      "Sentry",
      "PostHog"
    ],
    "tags": ["web", "analytics", "tech", "product"],
    "whyBuilt": [
      "Wanted to create a privacy-first alternative to third-party analytics tools for personal listening data",
      "Spotify's year-end Wrapped is great, but users should be able to access their listening insights anytime",
      "Opportunity to explore advanced PostgreSQL features like materialized views and Row Level Security policies",
      "Build a production-grade app with proper monitoring, testing, and CI/CD practices"
    ],
    "learnings": [
      {
        "content": "Implemented Row Level Security policies in Supabase for robust data privacy - essential for any app handling personal data",
        "sentiment": "positive"
      },
      {
        "content": "Materialized views significantly improved query performance for analytics aggregations",
        "sentiment": "positive"
      },
      {
        "content": "Using Vitest and Testing Library provided faster test execution compared to Jest",
        "sentiment": "positive"
      },
      {
        "content": "Integrated Sentry for error monitoring and PostHog for product analytics from day one - invaluable for debugging production issues",
        "sentiment": "positive"
      },
      {
        "content": "GitHub Actions CI/CD workflow automated testing and deployment, catching issues before production",
        "sentiment": "positive"
      }
    ],
    "links": {
      "live": "https://audiograph-phi.vercel.app",
      "github": "https://github.com/colin-rod/audiograph"
    },
    "featured": true,
    "year": 2025,
    "quarter": "Q4"
  },
  {
    "id": "raindrop-randomizer",
    "title": "Raindrop Randomizer",
    "slug": "raindrop-randomizer",
    "description": "Web tool to randomly select bookmarks from Raindrop.io collections",
    "detailedDescription": "A simple web application that integrates with Raindrop.io to help users discover random bookmarks from their collections. Perfect for rediscovering forgotten saved content or getting random reading suggestions.",
    "type": "tool",
    "status": "live",
    "techStack": ["HTML", "JavaScript", "Raindrop.io API"],
    "tags": ["web", "api", "automation", "tech"],
    "whyBuilt": [
      "Wanted a way to rediscover bookmarks saved in Raindrop.io collections",
      "Built a quick utility to randomly surface content from large bookmark collections",
      "Explore Raindrop.io API integration"
    ],
    "learnings": [
      {
        "content": "Simple HTML/JavaScript tools can be deployed quickly on Vercel without complex build processes",
        "sentiment": "positive"
      },
      {
        "content": "Raindrop.io API provides straightforward access to bookmark collections",
        "sentiment": "positive"
      }
    ],
    "links": {
      "live": "https://raindrop-randomizer.vercel.app",
      "github": "https://github.com/colin-rod/raindrop-randomizer"
    },
    "featured": false,
    "year": 2025,
    "quarter": "Q3"
  },
  {
    "id": "recipe-enrichment",
    "title": "Recipe Enrichment",
    "slug": "recipe-enrichment",
    "description": "Tool to enrich and enhance recipe data with additional metadata and formatting",
    "detailedDescription": "A web application that takes recipe URLs or text and enriches them with structured data, cooking times, ingredient measurements, and improved formatting. Makes recipes easier to follow and more accessible.",
    "type": "tool",
    "status": "live",
    "techStack": ["JavaScript", "HTML", "Web APIs"],
    "tags": ["web", "automation", "tech"],
    "whyBuilt": [
      "Needed a way to standardize recipe formats from various sources",
      "Wanted to extract structured data from recipe websites",
      "Make recipes more accessible and easier to follow"
    ],
    "learnings": [
      {
        "content": "Parsing recipe data from different websites requires flexible pattern matching",
        "sentiment": "neutral"
      },
      {
        "content": "Structured recipe data improves usability significantly",
        "sentiment": "positive"
      }
    ],
    "links": {
      "live": "https://recipe-enrichment.vercel.app",
      "github": "https://github.com/colin-rod/recipe-enrichment"
    },
    "featured": false,
    "year": 2025,
    "quarter": "Q3"
  },
  {
    "id": "raindrop-classifier",
    "title": "Raindrop Classifier",
    "slug": "raindrop-classifier",
    "description": "Automated tool to classify and organize Raindrop.io bookmarks using AI",
    "detailedDescription": "Automatically categorizes and tags bookmarks in Raindrop.io collections using AI-powered classification. Helps maintain organized bookmark collections without manual sorting.",
    "type": "tool",
    "status": "live",
    "techStack": ["JavaScript", "Raindrop.io API", "AI/ML"],
    "tags": ["automation", "api", "tech"],
    "whyBuilt": [
      "Manual bookmark organization is time-consuming and inconsistent",
      "Wanted to explore AI-powered content classification",
      "Automate the process of tagging and categorizing saved content"
    ],
    "learnings": [
      {
        "content": "AI classification can significantly reduce manual organization effort",
        "sentiment": "positive"
      },
      {
        "content": "Raindrop.io API allows bulk operations for efficient processing",
        "sentiment": "positive"
      }
    ],
    "links": {
      "github": "https://github.com/colin-rod/raindrop_classifier"
    },
    "featured": false,
    "year": 2025,
    "quarter": "Q3"
  },
  {
    "id": "photo-sorter",
    "title": "Photo Sorter",
    "slug": "photo-sorter",
    "description": "Python script to automatically organize photos by date, location, or metadata",
    "detailedDescription": "A command-line tool that analyzes photo EXIF data and automatically sorts images into organized folder structures. Supports sorting by date, location, camera model, and custom criteria.",
    "type": "tool",
    "status": "live",
    "techStack": ["Python", "EXIF", "File System"],
    "tags": ["automation", "tech"],
    "whyBuilt": [
      "Needed to organize thousands of photos from multiple sources",
      "Manual photo organization is tedious and error-prone",
      "Learn Python file system operations and EXIF data parsing"
    ],
    "learnings": [
      {
        "content": "EXIF metadata provides rich information for automated photo organization",
        "sentiment": "positive"
      },
      {
        "content": "Python's file handling libraries make batch processing straightforward",
        "sentiment": "positive"
      },
      {
        "content": "Need to handle edge cases like missing metadata or corrupted files carefully",
        "sentiment": "neutral"
      }
    ],
    "links": {
      "github": "https://github.com/colin-rod/photo-sorter"
    },
    "featured": false,
    "year": 2025,
    "quarter": "Q3"
  },
  {
    "id": "baby-name-app",
    "title": "Baby Name App",
    "slug": "baby-name-app",
    "description": "Interactive web app for couples to collaboratively choose baby names",
    "detailedDescription": "A collaborative tool that helps couples find the perfect baby name by allowing both partners to swipe through names Tinder-style. When both partners like the same name, it's added to a shared shortlist. Features filtering by origin, meaning, and popularity.",
    "type": "project",
    "status": "live",
    "techStack": ["JavaScript", "TypeScript", "HTML", "CSS"],
    "tags": ["web", "product", "tech"],
    "whyBuilt": [
      "Personal need during pregnancy to find names both partners liked",
      "Existing baby name apps lacked collaborative features",
      "Wanted to make the name selection process fun and engaging",
      "Explore swipe-based UI patterns"
    ],
    "learnings": [
      {
        "content": "Swipe-based interfaces create engaging user experiences for selection tasks",
        "sentiment": "positive"
      },
      {
        "content": "Real-time collaboration features require careful state management",
        "sentiment": "neutral"
      },
      {
        "content": "Baby name data sources vary widely in quality and completeness",
        "sentiment": "neutral"
      }
    ],
    "links": {
      "live": "https://baby-name-app-alpha.vercel.app",
      "github": "https://github.com/colin-rod/baby-name-app"
    },
    "featured": false,
    "year": 2025,
    "quarter": "Q3"
  },
  {
    "id": "babypool",
    "title": "BabyPool",
    "slug": "babypool",
    "description": "Fun prediction pool app for guessing baby birth details",
    "detailedDescription": "A social web application where friends and family can place predictions on baby birth details like date, time, weight, and other characteristics. Features real-time leaderboards, automated scoring, and shareable results for celebrating the new arrival.",
    "type": "project",
    "status": "live",
    "techStack": ["TypeScript", "PostgreSQL", "JavaScript", "CSS"],
    "tags": ["web", "product", "tech"],
    "whyBuilt": [
      "Wanted to create a fun, engaging way for friends and family to participate in the pregnancy journey",
      "Existing baby pool tools were outdated or lacked modern features",
      "Build a real-time application with live updates and scoring",
      "Create shareable, memorable experience for the birth announcement"
    ],
    "learnings": [
      {
        "content": "PostgreSQL database design for handling predictions and scoring logic",
        "sentiment": "positive"
      },
      {
        "content": "Real-time updates enhance user engagement for social prediction games",
        "sentiment": "positive"
      },
      {
        "content": "TypeScript provides excellent type safety for complex scoring calculations",
        "sentiment": "positive"
      },
      {
        "content": "User-friendly onboarding is critical for social apps where non-technical users participate",
        "sentiment": "neutral"
      }
    ],
    "links": {
      "live": "https://babypool.vercel.app",
      "github": "https://github.com/colin-rod/babypool"
    },
    "featured": true,
    "year": 2025,
    "quarter": "Q3"
  }
]
